apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "labels.selector" . | nindent 18 }}
              topologyKey: kubernetes.io/hostname
            weight: 100
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: "set-jira-credentials"
        image: "{{ .Values.init.registry }}/{{ .Values.init.name }}:{{ .Values.init.tag }}"
        volumeMounts:
        - name: config-dir
          mountPath: "config"
        - name: config
          mountPath: "tmp/jiralert.tmp"
          subPath: "jiralert.yml"
        env:
        - name: JIRA_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ include "name" . }}-credentials"
              key: "jira_username"
              optional: false
        - name: JIRA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "name" . }}-credentials"
              key: "jira_password"
              optional: false
        {{- with .Values.securityContext }}
        securityContext:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
        command:
        - "/bin/sh"
        args:
        - "-c"
        - "/bin/sed -e s/JIRA_USERNAME/$JIRA_USERNAME/ -e s/JIRA_PASSWORD/$JIRA_PASSWORD/ /tmp/jiralert.tmp > /config/jiralert.yml"
        resources:
          {{- .Values.initResources | toYaml | nindent 10 }}
      containers:
      - name: {{ include "name" . }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        volumeMounts:
        - name: config-dir
          mountPath: "config/"
        - name: template
          mountPath: "config/jiralert.tmpl"
          subPath: "jiralert.tmpl"
        ports:
        - containerPort: 9097
          protocol: TCP
        {{- with .Values.securityContext }}
        securityContext:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
        resources:
          {{- .Values.resources | toYaml | nindent 10 }}
      volumes:
      - name: config
        configMap:
          name: "{{ include "resource.default.name"  . }}-config"
      - name: template
        configMap:
          name: "{{ include "resource.default.name"  . }}-template"
      - name: config-dir
        emptyDir: {}
